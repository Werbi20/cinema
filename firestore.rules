rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // ============= FUNÇÕES AUXILIARES =============

    // Verificar se o usuário está autenticado
    function isAuthenticated() {
      return request.auth != null;
    }

    // Verificar se o usuário é dono do documento
    function isOwner(resource) {
      return request.auth.uid == resource.data.user_id;
    }

    // Verificar se o usuário é admin
    function isAdmin() {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'ADMIN';
    }

    // Verificar se o usuário é manager
    function isManager() {
      return isAuthenticated() &&
             (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['ADMIN', 'MANAGER']);
    }

    // Verificar se o usuário é coordinator
    function isCoordinator() {
      return isAuthenticated() &&
             (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['ADMIN', 'MANAGER', 'COORDINATOR']);
    }

    // ============= REGRAS POR COLEÇÃO =============

    // USUÁRIOS - Admins podem gerenciar, usuários podem ler próprios dados
    match /users/{userId} {
      allow read: if isAuthenticated() && (request.auth.uid == userId || isManager());
      allow write: if isAdmin() || (isAuthenticated() && request.auth.uid == userId && isValidUserUpdate());
    }

    function isValidUserUpdate() {
      // Usuários só podem atualizar campos específicos
      return request.resource.data.diff(resource.data).affectedKeys().hasOnly(['name', 'email', 'phone', 'updated_at']);
    }

    // PROJETOS - Coordinators podem gerenciar
    match /projects/{projectId} {
      allow read: if isAuthenticated();
      allow write: if isCoordinator();
    }

    // LOCALIZAÇÕES - Todos autenticados podem ler e escrever (para desenvolvimento)
    match /locations/{locationId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }

    // FORNECEDORES - Managers podem gerenciar
    match /suppliers/{supplierId} {
      allow read: if isAuthenticated();
      allow write: if isManager();
    }

    // CONTRATOS - Managers podem gerenciar
    match /contracts/{contractId} {
      allow read: if isAuthenticated();
      allow write: if isManager();
    }

    // FOTOS DE LOCALIZAÇÕES - Todos autenticados podem ver, coordinators podem adicionar
    match /location_photos/{photoId} {
      allow read: if isAuthenticated();
      allow write: if isCoordinator();
    }

    // VISITAS - Todos autenticados podem ver suas visitas, coordinators podem gerenciar
    match /visits/{visitId} {
      allow read: if isAuthenticated() && (isOwner(resource) || isCoordinator());
      allow write: if isCoordinator();
    }

    // NOTIFICAÇÕES - Usuários podem ver suas notificações, managers podem criar
    match /notifications/{notificationId} {
      allow read: if isAuthenticated() && (isOwner(resource) || isManager());
      allow write: if isManager();
    }

    // APRESENTAÇÕES - Todos autenticados podem ver, coordinators podem gerenciar
    match /presentations/{presentationId} {
      allow read: if isAuthenticated();
      allow write: if isCoordinator();
    }

    // TAGS - Todos podem ler, coordinators podem escrever
    match /tags/{tagId} {
      allow read: if isAuthenticated();
      allow write: if isCoordinator();
    }

    // ESTÁGIOS DE PROJETOS - Coordinators podem gerenciar
    match /project_stages/{stageId} {
      allow read: if isAuthenticated();
      allow write: if isCoordinator();
    }

    // TAREFAS DE PROJETOS - Coordinators podem gerenciar
    match /project_tasks/{taskId} {
      allow read: if isAuthenticated();
      allow write: if isCoordinator();
    }

    // MOVIMENTOS FINANCEIROS - Managers podem gerenciar
    match /financial_movements/{movementId} {
      allow read: if isManager();
      allow write: if isManager();
    }

    // LOG DE AUDITORIA - Apenas admins podem ler
    match /audit_log/{logId} {
      allow read: if isAdmin();
      allow write: if false; // Apenas o sistema pode escrever
    }

    // EVENTOS DA AGENDA - Todos autenticados podem ver, coordinators podem gerenciar
    match /agenda_events/{eventId} {
      allow read: if isAuthenticated();
      allow write: if isCoordinator();
    }

    // ============= SUBCOLEÇÕES =============

    // Subcoleções de projetos
    match /projects/{projectId}/stages/{stageId} {
      allow read: if isAuthenticated();
      allow write: if isCoordinator();
    }

    match /projects/{projectId}/tasks/{taskId} {
      allow read: if isAuthenticated();
      allow write: if isCoordinator();
    }

    match /projects/{projectId}/photos/{photoId} {
      allow read: if isAuthenticated();
      allow write: if isCoordinator();
    }

    // Subcoleções de usuários
    match /users/{userId}/notifications/{notificationId} {
      allow read: if isAuthenticated() && request.auth.uid == userId;
      allow write: if isManager();
    }

    // ============= REGRA PADRÃO =============

    // Negar acesso por padrão a qualquer outra coleção
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
